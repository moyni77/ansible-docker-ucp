---
- hosts: ucp
  gather_facts: false
  become_user: root
  become: true

  vars_files:
    - ../group_vars/vars
    - ../group_vars/vault
   
  environment: "{{ env }}"

  vars:
      san_fqdns: "{% for host in groups['ucp']+groups['ucp_lb'] %}--san {{ host }}.{{ domain_name }} {% endfor %}" 
      san_ips: "{% for host in groups['ucp']+groups['ucp_lb'] %} --san {{ hostvars[host].ip_addr | ipaddr('address') }} {% endfor %}" 
      san_all_formatted: "{{ san_fqdns }} {{ san_ips }}" 
  
  tasks:
    - name: Open required ports for UCP
      command: firewall-cmd --permanent --zone=public --add-port=443/tcp --add-port=2376/tcp --add-port=2377/tcp --add-port=4789/tcp --add-port=4789/udp --add-port=7946/tcp --add-port=7946/udp --add-port=12376/tcp --add-port=12379/tcp --add-port=12380/tcp --add-port=12381/tcp --add-port=12382/tcp --add-port=12383/tcp --add-port=12384/tcp --add-port=12385/tcp --add-port=12386/tcp --add-port=12387/tcp

    - name: Reload firewalld configuration
      command: firewall-cmd --reload

    - name: Restart docker service
      systemd:
        name: docker
        state: restarted

    - name: Check if node already belongs to the swarm
      shell: docker info | grep "Swarm{{ ":" }} inactive" | wc -l
      register: swarm_inactive

    - name: Copy the license
      copy: src="{{ license_file }}" dest="/tmp/{{ license_file | basename }}"

    - name: Install swarm leader and first UCP node
      shell: docker run --rm --name ucp -v /var/run/docker.sock:/var/run/docker.sock docker/ucp:{{ ucp_version }} install --host-address {{ ip_addr | ipaddr('address') }} --admin-username={{ ucp_username }} --admin-password={{ ucp_password }} --license "$(cat /tmp/{{ license_file | basename }})" {{ san_all_formatted }}
      register: output
      when: inventory_hostname in groups.ucp_main and swarm_inactive.stdout == "1"

    - name: Get swarm manager token
      shell: echo `docker swarm join-token manager` | cut -f2 -d':' | sed 's|\\||g'
      register: manager_token
      when: inventory_hostname in groups.ucp_main

    - name: Get swarm worker token
      shell: echo `docker swarm join-token worker` | cut -f2 -d':' | sed 's|\\||g'
      register: worker_token
      when: inventory_hostname in groups.ucp_main

    - name: Save worker token
      local_action: copy content="token{{ ":" }} {{ hostvars[groups['ucp_main'][0]]['worker_token']['stdout'] }}" dest=/tmp/worker_token

    - name: Add additional UCP nodes to the swarm
      command: "{{ hostvars[groups['ucp_main'][0]]['manager_token']['stdout'] }}"
      when: inventory_hostname not in groups.ucp_main and swarm_inactive.stdout == "1"
